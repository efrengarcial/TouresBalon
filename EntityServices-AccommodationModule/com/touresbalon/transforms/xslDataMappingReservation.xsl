<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="com/touresbalon/transforms/xslDataMappingReservation.map" md5sum="4d9353e61c14cfa15234a92bd22ed119" version="7.0.500" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.500
*
*   Mapping file:		xslDataMappingReservation.map
*   Map declaration(s):	xslDataMappingReservation
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FAccommodationLib%252Fcom%252Ftouresbalon%252Finterfaces%252FAccommodationServiceIF%257DmakeReservationRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252Ftempuri.org%252F%257DbookingRoomSoapIn/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://CommonDomain/com/touresbalon/bo"
    xmlns:in2="http://AccommodationLib/com/touresbalon/interfaces/AccommodationServiceIF"
    xmlns:in3="wsdl.http://AccommodationLib/com/touresbalon/interfaces/AccommodationServiceIF"
    xmlns:in4="http://AccommodationLib/com/touresbalon/bo"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:out="http://tempuri.org/"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out2="wsdl.http://tempuri.org/"
    xmlns:xsd4xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:MapUtils="xalan://com.ibm.wbiserver.transform.util.MapUtils"
    xmlns:map="http://AccommodationModule/com/touresbalon/transforms/xslDataMappingReservation"
    exclude-result-prefixes="xalan str set MapUtils in math map exsl in2 date in3 in4"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="body" mode="map:xslDataMappingReservation"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:xslDataMappingReservation">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out2:bookingRoomSoapIn'"/>
      </xsl:attribute>
      <out:bookingRoom>
        <out:reservation>
          <!-- a simple data mapping: "in2:makeReservation/request/hotelID"(int) to "out:HotelID"(int) -->
          <out:HotelID>
            <xsl:value-of select="in2:makeReservation/request/hotelID"/>
          </out:HotelID>
          <!-- a simple data mapping: "in2:makeReservation/request/roomNumber"(int) to "out:RoomNumber"(int) -->
          <out:RoomNumber>
            <xsl:value-of select="in2:makeReservation/request/roomNumber"/>
          </out:RoomNumber>
          <!-- a simple data mapping: "in2:makeReservation/request/checkInDate"(date) to "out:CheckInDate"(dateTime) -->
          <out:CheckInDate>
            <!-- variables for custom code -->
            <xsl:variable name="checkInDate" select="in2:makeReservation/request/checkInDate"/>
            <xsl:value-of select="MapUtils:dateToDateTime($checkInDate, '1970-01-01T00:00:00')"/>
          </out:CheckInDate>
          <!-- a simple data mapping: "in2:makeReservation/request/checkOutDate"(date) to "out:checkOutDate"(dateTime) -->
          <out:checkOutDate>
            <!-- variables for custom code -->
            <xsl:variable name="checkOutDate" select="in2:makeReservation/request/checkOutDate"/>
            <xsl:value-of select="MapUtils:dateToDateTime($checkOutDate, '1970-01-01T00:00:00')"/>
          </out:checkOutDate>
          <!-- a simple data mapping: "in2:makeReservation/request/orderID"(string) to "out:OrderID"(string) -->
          <xsl:if test="in2:makeReservation/request/orderID">
            <out:OrderID>
              <xsl:value-of select="in2:makeReservation/request/orderID"/>
            </out:OrderID>
          </xsl:if>
        </out:reservation>
      </out:bookingRoom>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:xslDataMappingReservation2">
    <xsl:param name="body"/>
    <out:bookingRoom>
      <out:reservation>
        <!-- a simple data mapping: "$body/in2:makeReservation/request/hotelID"(int) to "out:HotelID"(int) -->
        <out:HotelID>
          <xsl:value-of select="$body/in2:makeReservation/request/hotelID"/>
        </out:HotelID>
        <!-- a simple data mapping: "$body/in2:makeReservation/request/roomNumber"(int) to "out:RoomNumber"(int) -->
        <out:RoomNumber>
          <xsl:value-of select="$body/in2:makeReservation/request/roomNumber"/>
        </out:RoomNumber>
        <!-- a simple data mapping: "$body/in2:makeReservation/request/checkInDate"(date) to "out:CheckInDate"(dateTime) -->
        <out:CheckInDate>
          <!-- variables for custom code -->
          <xsl:variable name="checkInDate" select="$body/in2:makeReservation/request/checkInDate"/>
          <xsl:value-of select="MapUtils:dateToDateTime($checkInDate, '1970-01-01T00:00:00')"/>
        </out:CheckInDate>
        <!-- a simple data mapping: "$body/in2:makeReservation/request/checkOutDate"(date) to "out:checkOutDate"(dateTime) -->
        <out:checkOutDate>
          <!-- variables for custom code -->
          <xsl:variable name="checkOutDate" select="$body/in2:makeReservation/request/checkOutDate"/>
          <xsl:value-of select="MapUtils:dateToDateTime($checkOutDate, '1970-01-01T00:00:00')"/>
        </out:checkOutDate>
        <!-- a simple data mapping: "$body/in2:makeReservation/request/orderID"(string) to "out:OrderID"(string) -->
        <xsl:if test="$body/in2:makeReservation/request/orderID">
          <out:OrderID>
            <xsl:value-of select="$body/in2:makeReservation/request/orderID"/>
          </out:OrderID>
        </xsl:if>
      </out:reservation>
    </out:bookingRoom>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
