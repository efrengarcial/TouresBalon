<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="com/touresbalon/transforms/xslDataMappingReservations.map" md5sum="021a92450226555b59701495f6f4b581" version="7.0.500" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.500
*
*   Mapping file:		xslDataMappingReservations.map
*   Map declaration(s):	xslDataMappingReservations
*   Input file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FAccommodationLib%252Fcom%252Ftouresbalon%252Finterfaces%252FAccommodationServiceIF%257DmakeReservationRequestMsg/xpath%3D%252Fbody/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/message%3D%257Bhttp%253A%252F%252FAccommodationModule%252FDannCarltonReservations%257DcreateDboTouresbalon_ReservationsBGRequestMsg/xpath%3D%252Fbody/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://CommonDomain/com/touresbalon/bo"
    xmlns:in2="http://AccommodationLib/com/touresbalon/interfaces/AccommodationServiceIF"
    xmlns:in3="wsdl.http://AccommodationLib/com/touresbalon/interfaces/AccommodationServiceIF"
    xmlns:in4="http://AccommodationLib/com/touresbalon/bo"
    xmlns:out="http://AccommodationModule/DannCarltonReservations"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out2="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/dbotouresbalon_reservations"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:out3="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/existsresult"
    xmlns:out4="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/dbotouresbalon_reservationsbg"
    xmlns:out5="wsdl.http://AccommodationModule/DannCarltonReservations"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:out6="http://com/ibm/j2ca/fault"
    xmlns:io4="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io5="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:out7="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:xsd4xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:out8="http://www.ibm.com/xmlns/prod/websphere/j2ca/jdbc/dbotouresbalon_reservationscontainer"
    xmlns:io6="http://www.w3.org/2005/08/addressing"
    xmlns:out9="http://com/ibm/j2ca/fault/afcfault"
    xmlns:map="http://AccommodationModule/com/touresbalon/transforms/xslDataMappingReservations"
    exclude-result-prefixes="xalan str set in math map exsl in2 date in3 in4"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="body" mode="map:xslDataMappingReservations"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "body" to "body".  -->
  <xsl:template match="body"  mode="map:xslDataMappingReservations">
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out5:createDboTouresbalon_ReservationsBGRequestMsg'"/>
      </xsl:attribute>
      <out:createDboTouresbalon_ReservationsBG>
        <out:createDboTouresbalon_ReservationsBGInput>
          <DboTouresbalon_Reservations>
            <!-- a simple data mapping: "in2:makeReservation/request/orderID"(string) to "order_id"(string) -->
            <xsl:if test="in2:makeReservation/request/orderID">
              <order_id>
                <xsl:value-of select="in2:makeReservation/request/orderID"/>
              </order_id>
            </xsl:if>
            <!-- a simple data mapping: "in2:makeReservation/request/hotelID"(int) to "hotel_id"(int) -->
            <xsl:if test="in2:makeReservation/request/hotelID">
              <xsl:choose>
                <xsl:when test="normalize-space(in2:makeReservation/request/hotelID)">
                  <hotel_id>
                    <xsl:value-of select="in2:makeReservation/request/hotelID"/>
                  </hotel_id>
                </xsl:when>
                <xsl:otherwise>
                  <hotel_id xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <!-- a simple data mapping: "in2:makeReservation/request/roomNumber"(int) to "room_number"(int) -->
            <xsl:if test="in2:makeReservation/request/roomNumber">
              <xsl:choose>
                <xsl:when test="normalize-space(in2:makeReservation/request/roomNumber)">
                  <room_number>
                    <xsl:value-of select="in2:makeReservation/request/roomNumber"/>
                  </room_number>
                </xsl:when>
                <xsl:otherwise>
                  <room_number xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <!-- a simple data mapping: "in2:makeReservation/request/checkInDate"(date) to "check_in_date"(date) -->
            <xsl:if test="in2:makeReservation/request/checkInDate">
              <xsl:choose>
                <xsl:when test="normalize-space(in2:makeReservation/request/checkInDate)">
                  <check_in_date>
                    <xsl:value-of select="in2:makeReservation/request/checkInDate"/>
                  </check_in_date>
                </xsl:when>
                <xsl:otherwise>
                  <check_in_date xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <!-- a simple data mapping: "in2:makeReservation/request/checkOutDate"(date) to "check_out_date"(date) -->
            <xsl:if test="in2:makeReservation/request/checkOutDate">
              <xsl:choose>
                <xsl:when test="normalize-space(in2:makeReservation/request/checkOutDate)">
                  <check_out_date>
                    <xsl:value-of select="in2:makeReservation/request/checkOutDate"/>
                  </check_out_date>
                </xsl:when>
                <xsl:otherwise>
                  <check_out_date xsi:nil="true"/>
                </xsl:otherwise>
              </xsl:choose>
            </xsl:if>
            <state xsi:nil="true"/>
            <!-- a simple data mapping: "in2:makeReservation/request/guestName"(string) to "guest_name"(string) -->
            <guest_name>
              <xsl:value-of select="in2:makeReservation/request/guestName"/>
            </guest_name>
          </DboTouresbalon_Reservations>
        </out:createDboTouresbalon_ReservationsBGInput>
      </out:createDboTouresbalon_ReservationsBG>
    </body>
  </xsl:template>

  <!-- This rule represents a type mapping: "body" to "body".  -->
  <xsl:template name="map:xslDataMappingReservations2">
    <xsl:param name="body"/>
    <out:createDboTouresbalon_ReservationsBG>
      <out:createDboTouresbalon_ReservationsBGInput>
        <DboTouresbalon_Reservations>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/orderID"(string) to "order_id"(string) -->
          <xsl:if test="$body/in2:makeReservation/request/orderID">
            <order_id>
              <xsl:value-of select="$body/in2:makeReservation/request/orderID"/>
            </order_id>
          </xsl:if>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/hotelID"(int) to "hotel_id"(int) -->
          <xsl:if test="$body/in2:makeReservation/request/hotelID">
            <xsl:choose>
              <xsl:when test="normalize-space($body/in2:makeReservation/request/hotelID)">
                <hotel_id>
                  <xsl:value-of select="$body/in2:makeReservation/request/hotelID"/>
                </hotel_id>
              </xsl:when>
              <xsl:otherwise>
                <hotel_id xsi:nil="true"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/roomNumber"(int) to "room_number"(int) -->
          <xsl:if test="$body/in2:makeReservation/request/roomNumber">
            <xsl:choose>
              <xsl:when test="normalize-space($body/in2:makeReservation/request/roomNumber)">
                <room_number>
                  <xsl:value-of select="$body/in2:makeReservation/request/roomNumber"/>
                </room_number>
              </xsl:when>
              <xsl:otherwise>
                <room_number xsi:nil="true"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/checkInDate"(date) to "check_in_date"(date) -->
          <xsl:if test="$body/in2:makeReservation/request/checkInDate">
            <xsl:choose>
              <xsl:when test="normalize-space($body/in2:makeReservation/request/checkInDate)">
                <check_in_date>
                  <xsl:value-of select="$body/in2:makeReservation/request/checkInDate"/>
                </check_in_date>
              </xsl:when>
              <xsl:otherwise>
                <check_in_date xsi:nil="true"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/checkOutDate"(date) to "check_out_date"(date) -->
          <xsl:if test="$body/in2:makeReservation/request/checkOutDate">
            <xsl:choose>
              <xsl:when test="normalize-space($body/in2:makeReservation/request/checkOutDate)">
                <check_out_date>
                  <xsl:value-of select="$body/in2:makeReservation/request/checkOutDate"/>
                </check_out_date>
              </xsl:when>
              <xsl:otherwise>
                <check_out_date xsi:nil="true"/>
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <state xsi:nil="true"/>
          <!-- a simple data mapping: "$body/in2:makeReservation/request/guestName"(string) to "guest_name"(string) -->
          <guest_name>
            <xsl:value-of select="$body/in2:makeReservation/request/guestName"/>
          </guest_name>
        </DboTouresbalon_Reservations>
      </out:createDboTouresbalon_ReservationsBGInput>
    </out:createDboTouresbalon_ReservationsBG>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
