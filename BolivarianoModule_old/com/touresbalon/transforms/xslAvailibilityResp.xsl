<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="com/touresbalon/transforms/xslAvailibilityResp.map" md5sum="c463d9e60fad8b30210ecaca559481c9" version="7.0.500" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor V7.0.500
*
*   Mapping file:		xslAvailibilityResp.map
*   Map declaration(s):	xslAvailibilityResp
*   Input file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FTransportLib%252Fcom%252Ftouresbalon%252Fbo%257DTravelsRequest/message%3D%257Bhttp%253A%252F%252FBolivarianoModule%252FBolivarianoTravelsFile%257DretrieveTravelsResponseMsg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/correlationContext%3D%257Bhttp%253A%252F%252FTransportLib%252Fcom%252Ftouresbalon%252Fbo%257DTravelsRequest/message%3D%257Bhttp%253A%252F%252FTransportLib%257DcheckAvailabilityResponseMsg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xalan="http://xml.apache.org/xslt"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:math="http://exslt.org/math"
    xmlns:exsl="http://exslt.org/common"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:in="http://BolivarianoModule/com/touresbalon/bo/transportbolivarianoretrievewrapperbg"
    xmlns:in2="http://BolivarianoModule/com/touresbalon/bo"
    xmlns:in8="http://www.ibm.com/xmlns/prod/websphere/j2ca/flatfile/flatfile"
    xmlns:in3="wsdl.http://BolivarianoModule/BolivarianoTravelsFile"
    xmlns:in4="http://com/ibm/j2ca/fault"
    xmlns:in5="http://www.ibm.com/xmlns/prod/websphere/j2ca/base/unstructuredcontent"
    xmlns:in9="http://www.ibm.com/xmlns/prod/websphere/bo/6.0.0"
    xmlns:in10="http://BolivarianoModule/com/touresbalon/bo/transportbolivarianoretrievewrapper"
    xmlns:in6="http://BolivarianoModule/BolivarianoTravelsFile"
    xmlns:in7="http://com/ibm/j2ca/fault/afcfault"
    xmlns:io="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io3="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io2="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:out="wsdl.http://TransportLib"
    xmlns:io4="http://TransportLib/com/touresbalon/bo"
    xmlns:io5="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io6="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:xsd4xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:io7="http://www.w3.org/2005/08/addressing"
    xmlns:out2="http://TransportLib"
    xmlns:map="http://BolivarianoModule/com/touresbalon/transforms/xslAvailibilityResp"
    exclude-result-prefixes="set in10 in math exsl in2 date in3 in4 xalan in5 in6 str in7 in8 in9 map"
    version="1.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root template  -->
  <xsl:template match="/">
    <xsl:apply-templates select="io2:smo" mode="map:xslAvailibilityResp"/>
  </xsl:template>

  <!-- This rule represents an element mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template match="io2:smo"  mode="map:xslAvailibilityResp">
    <io2:smo>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'out:checkAvailabilityResponseMsg'"/>
        </xsl:attribute>
        <out2:checkAvailabilityResponse>
          <out2:response>
            <!-- a for-each transform: "Content"(TransportBolivariano) to "Content"(Transport) -->
            <xsl:apply-templates select="body/in6:retrieveTravelsResponse/in6:retrieveTravelsOutput/TransportBolivarianoRetrieveWrapper/Content" mode="localContentToContent_238880686"/>
          </out2:response>
        </out2:checkAvailabilityResponse>
      </body>
    </io2:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io2:smo" to "io2:smo".  -->
  <xsl:template name="map:xslAvailibilityResp2">
    <xsl:param name="smo"/>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'out:checkAvailabilityResponseMsg'"/>
      </xsl:attribute>
      <out2:checkAvailabilityResponse>
        <out2:response>
          <!-- a for-each transform: "Content"(TransportBolivariano) to "Content"(Transport) -->
          <xsl:apply-templates select="$smo/body/in6:retrieveTravelsResponse/in6:retrieveTravelsOutput/TransportBolivarianoRetrieveWrapper/Content" mode="localContentToContent_238880686"/>
        </out2:response>
      </out2:checkAvailabilityResponse>
    </body>
  </xsl:template>

  <!-- This rule represents a for-each transform: "Content" to "Content".  -->
  <xsl:template match="Content"  mode="localContentToContent_238880686">
    <Content>
      <!-- a simple data mapping: "numViaje"(int) to "numViaje"(int) -->
      <xsl:if test="numViaje">
        <numViaje>
          <xsl:value-of select="numViaje"/>
        </numViaje>
      </xsl:if>
      <!-- a simple data mapping: "ciudadOrigen"(string) to "ciudadOrigen"(string) -->
      <xsl:if test="ciudadOrigen">
        <ciudadOrigen>
          <xsl:value-of select="ciudadOrigen"/>
        </ciudadOrigen>
      </xsl:if>
      <!-- a simple data mapping: "ciudadDestino"(string) to "ciudadDestino"(string) -->
      <xsl:if test="ciudadDestino">
        <ciudadDestino>
          <xsl:value-of select="ciudadDestino"/>
        </ciudadDestino>
      </xsl:if>
      <!-- a simple data mapping: "numSilla"(int) to "numSilla"(int) -->
      <xsl:if test="numSilla">
        <numSilla>
          <xsl:value-of select="numSilla"/>
        </numSilla>
      </xsl:if>
    </Content>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::*">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
